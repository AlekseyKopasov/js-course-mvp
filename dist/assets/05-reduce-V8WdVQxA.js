const c="# Методы reduce() и reduceRight()\n## Основные концепции\nМетоды `reduce()` и `reduceRight()` используются для преобразования массива в единственное значение(свертка массива).\n### Ключевые различия:\n|Метод|Направление обхода|Аргументы callback||-------|-------------------|-------------------||reduce()|Слева направо|accumulator,currentValue,index,array||reduceRight()|Справа налево|accumulator,currentValue,index,array|\n## Синтаксис\n```javascriptarray.reduce(callback[,initialValue])array.reduceRight(callback[,initialValue])```\n## Практические примеры\n### 1. Суммирование элементов\n```javascriptconst numbers=[10,20,30,40];const sum1=numbers.reduce((acc,curr)=>acc+curr);const sum2=numbers.reduce((acc,curr)=>acc+curr,10);```\n### 2. Преобразование многомерного массива\n```javascriptconst matrix=[[1,2],[3,4],[5,6]];const flat1=matrix.reduce((acc,curr)=>acc.concat(curr),[]);const flat2=matrix.reduce((acc,curr)=>[...acc,...curr],[]);```\n### 3. Агрегация данных из объектов\n```javascriptconst friends=[{name: 'Anna',books:['1984','Метро 2033']},{name: 'Ivan',books:['Война и мир']},{name: 'Maria',books:['Гарри Поттер','Властелин колец']}];const allBooks=friends.reduce((acc,friend)=>[...acc,...friend.books],[]);```\n## Особенности работы\n### 1. Начальное значение (initialValue):\n-Если не указано,первый элемент становится начальным значением-Рекомендуется всегда указывать для сложных операций\n### 2. Порядок обработки:\n-`reduce()`: первый → последний элемент-`reduceRight()`: последний → первый элемент\n### 3. Пустые массивы:\n-Вызов без initialValue на пустом массиве вызывает ошибку-С initialValue-возвращает initialValue\n## Применение в реальных проектах\n### 1. Статистические вычисления\n```javascriptconst stats=[4.5,3.2,6.7,2.1];const avg=stats.reduce((sum,val)=>sum+val,0)/stats.length;```\n### 2. Композиция функций\n```javascriptconst compose=(...funcs)=>x=>funcs.reduceRight((acc,fn)=>fn(acc),x);```\n### 3. Группировка данных\n```javascriptconst items=['apple','banana','orange','apple'];const count=items.reduce((acc,item)=>{acc[item]=(acc[item]||0)+1;return acc;},{});```>Методы `reduce()` и `reduceRight()`-мощные инструменты для обработки данных,которые позволяют элегантно решать сложные задачи преобразования массивов.";export{c as default};
//# sourceMappingURL=05-reduce-V8WdVQxA.js.map
