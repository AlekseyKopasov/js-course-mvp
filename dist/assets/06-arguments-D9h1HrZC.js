const r="# Псевдомассив arguments\n## Основные концепции\n**arguments**— это объект,доступный внутри функций,который содержит все переданные аргументы.\n### Особенности:\n-Доступен во всех функциях(кроме стрелочных)-Является псевдомассивом(имеет `length` и числовые индексы)-Не поддерживает методы массивов(`push`,`map` и т.д.)-Тип — `object`(не `array`)\n## Практические примеры\n### 1. Базовое использование\n```javascriptfunction showArgs(){console.log(arguments);console.log(arguments.length);console.log(typeof arguments);}showArgs(1,'text',true);```\n### 2. Преобразование в настоящий массив\n```javascriptfunction convertToArray(){const arr=[];for(let i=0;i<arguments.length;i++){arr.push(arguments[i]);}return arr;}const argsArray=Array.from(arguments);const argsArray=[...arguments];```\n### 3. Функция с переменным числом аргументов\n```javascriptfunction joinWithSeparator(separator){const parts=[];for(let i=1;i<arguments.length;i++){parts.push(arguments[i]);}return parts.join(separator);}console.log(joinWithSeparator('-','a','b','c'));```\n## Современные альтернативы (ES6+)\n### Rest параметры\n```javascriptfunction modernFunction(...args){console.log(args.map(x=>x*2));}```\n### Отличия от rest параметров:\n|Характеристика|arguments|Rest параметры||----------------|-----------|----------------||Тип|Псевдомассив|Настоящий массив||Доступность|Все функции|Только при объявлении||Стрелочные функции|❌ Нет|✅ Да||Явное объявление|❌ Нет|✅ Да|\n## Важные замечания\n1. В строгом режиме(`'use strict'`)`arguments` не связан с параметрами функции2. Не рекомендуется использовать в новом коде(лучше rest параметры)3. Может быть полезен при работе с legacy-кодом>Псевдомассив `arguments` — важная часть JavaScript,хотя в современном коде предпочтительнее использовать rest параметры.";export{r as default};
//# sourceMappingURL=06-arguments-D9h1HrZC.js.map
