{"version":3,"file":"01-forEach-ChkSdrRy.js","sources":["../../src/entities/lecture/assets/lectures/01-forEach.md"],"sourcesContent":["# Метод forEach\n\n## Основные сведения\n\nМетод `forEach` — один из перебирающих методов массивов в JavaScript. Он выполняет обход элементов массива и вызывает указанную функцию для каждого элемента.\n\n### Особенности:\n- Не возвращает значение (возвращает `undefined`)\n- Принимает callback-функцию с тремя аргументами:\n  1. Текущий элемент массива\n  2. Индекс элемента\n  3. Сам массив\n\n## Примеры использования\n\n### 1. Базовый пример\n\n```javascript\nconst array = [1, 2, 3, 4, 5];\nconst newArray = [];\n\narray.forEach(item => {\n  newArray.push(item ** 2);\n});\n\nconsole.log(newArray); // [1, 4, 9, 16, 25]\n```\n\n### 2. Суммирование элементов\n\n```javascript\nlet counter = 0;\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nnumbers.forEach(num => {\n  counter += num;\n});\n\nconsole.log(counter); // 55\n```\n\n### 3. Работа с JSON-данными\n\n```javascript\nconst users = [\n  { id: 1, name: \"Анна\" },\n  { id: 2, name: \"Иван\" },\n  { id: 3, name: \"Мария\" }\n];\n\nconst names = [];\nconst getNames = user => names.push(user.name);\n\nusers.forEach(getNames);\nconsole.log(names); // [\"Анна\", \"Иван\", \"Мария\"]\n```\n\n## Важно помнить\n\n- `forEach` не изменяет исходный массив (но может изменять элементы, если они объекты)\n- Для досрочного прекращения перебора нужно использовать исключение (в отличие от `for...of`, где можно использовать `break`)\n- Для преобразования массива лучше подходят `map`, `filter` или `reduce`\n\n> Метод `forEach` идеально подходит для случаев, когда нужно просто выполнить операцию для каждого элемента массива без необходимости возвращать новый массив.\n\n"],"names":["_01ForEach"],"mappings":"AAAA,MAAAA,EAAe"}