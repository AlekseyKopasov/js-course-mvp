{"version":3,"file":"06-arguments-D9h1HrZC.js","sources":["../../src/entities/lecture/assets/lectures/06-arguments.md"],"sourcesContent":["# Псевдомассив arguments\n\n## Основные концепции\n\n**arguments** — это объект, доступный внутри функций, который содержит все переданные аргументы.\n\n### Особенности:\n- Доступен во всех функциях (кроме стрелочных)\n- Является псевдомассивом (имеет `length` и числовые индексы)\n- Не поддерживает методы массивов (`push`, `map` и т.д.)\n- Тип — `object` (не `array`)\n\n## Практические примеры\n\n### 1. Базовое использование\n\n```javascript\nfunction showArgs() {\n  console.log(arguments); // Псевдомассив аргументов\n  console.log(arguments.length); // Количество аргументов\n  console.log(typeof arguments); // \"object\"\n}\n\nshowArgs(1, 'text', true);\n// Arguments(3) [1, \"text\", true]\n// 3\n// \"object\"\n```\n\n### 2. Преобразование в настоящий массив\n\n```javascript\n// Способ 1: цикл for\nfunction convertToArray() {\n  const arr = [];\n  for (let i = 0; i < arguments.length; i++) {\n    arr.push(arguments[i]);\n  }\n  return arr;\n}\n\n// Способ 2: Array.from (ES6)\nconst argsArray = Array.from(arguments);\n\n// Способ 3: spread оператор (ES6)\nconst argsArray = [...arguments];\n```\n\n### 3. Функция с переменным числом аргументов\n\n```javascript\nfunction joinWithSeparator(separator) {\n  const parts = [];\n  // Начинаем с 1, так как 0-й аргумент - separator\n  for (let i = 1; i < arguments.length; i++) {\n    parts.push(arguments[i]);\n  }\n  return parts.join(separator);\n}\n\nconsole.log(joinWithSeparator(' - ', 'a', 'b', 'c')); // \"a - b - c\"\n```\n\n## Современные альтернативы (ES6+)\n\n### Rest параметры\n\n```javascript\nfunction modernFunction(...args) {\n  // args — настоящий массив\n  console.log(args.map(x => x * 2));\n}\n```\n\n### Отличия от rest параметров:\n\n| Характеристика | arguments | Rest параметры |\n|----------------|-----------|----------------|\n| Тип | Псевдомассив | Настоящий массив |\n| Доступность | Все функции | Только при объявлении |\n| Стрелочные функции | ❌ Нет | ✅ Да |\n| Явное объявление | ❌ Нет | ✅ Да |\n\n## Важные замечания\n\n1. В строгом режиме (`'use strict'`) `arguments` не связан с параметрами функции\n2. Не рекомендуется использовать в новом коде (лучше rest параметры)\n3. Может быть полезен при работе с legacy-кодом\n\n> Псевдомассив `arguments` — важная часть JavaScript, хотя в современном коде предпочтительнее использовать rest параметры.\n\n"],"names":["_06Arguments"],"mappings":"AAAA,MAAAA,EAAe"}