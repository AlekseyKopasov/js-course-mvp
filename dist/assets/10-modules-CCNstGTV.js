const n='# Модули\n## Основные концепции\n**Модуль**— это паттерн проектирования,который позволяет:-Инкапсулировать реализацию-Избегать конфликтов имен-Контролировать доступ к функциональности\n## Проблема глобального пространства имен\n```javascriptvar message="Hello";function showMessage(){console.log(message);}```\n## Решение: Immediately Invoked Function Expression (IIFE)\n### Базовый шаблон\n```javascript(function(){var message="Hello";function showMessage(){console.log(message);}showMessage();})();```\n### Варианты синтаксиса IIFE\n```javascript(function(){})();+function(){}();!function(){}();(function(){}());```\n### Экспорт функциональности\n```javascriptvar myModule=(function(){var privateVar="Привет";function privateMethod(){console.log(privateVar);}return{publicMethod: function(){privateMethod();}};})();myModule.publicMethod();```\n## Современные модули (ES6+)\n### Экспорт\n```javascriptconst privateVar="Секретные данные";export function publicMethod(){console.log(privateVar);}```\n### Импорт\n```javascriptimport{publicMethod}from \'./module.js\';publicMethod();```\n## Преимущества модулей\n1. Изоляция кода — переменные не попадают в глобальную область видимости2. Инкапсуляция — скрытие внутренней реализации3. Переиспользование — модули можно легко подключать в разных проектах4. Тестируемость — модули можно тестировать независимо\n## Практический пример\n### Создание счетчика\n```javascriptvar counterModule=(function(){var count=0;return{increment: function(){return++count;},reset: function(){count=0;},getCount: function(){return count;}};})();console.log(counterModule.increment());console.log(counterModule.getCount());counterModule.reset();```>Модули — это фундаментальный паттерн JavaScript,позволяющий создавать структурированный и поддерживаемый код.';export{n as default};
//# sourceMappingURL=10-modules-CCNstGTV.js.map
